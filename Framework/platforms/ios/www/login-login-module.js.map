{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-content class=\\\"form-content\\\">\\n  <div padding-top text-start>\\n    <ion-button fill=\\\"clear\\\" [routerLink]=\\\"'/landing/'\\\" routerDirection=\\\"forward\\\"><ion-icon name=\\\"arrow-back\\\"></ion-icon>Atras</ion-button>\\n  </div>\\n\\n  <div padding text-center>\\n      <br>\\n      <img src=\\\"../../assets/icon/favicon.png\\\" alt=\\\"\\\" width = \\\"128\\\" height = \\\"128\\\">  \\n      <h3 color=\\\"primary\\\">Bienvenido</h3>\\n\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"tryLogin(validations_form.value)\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Email:</ion-label>\\n      <ion-input type=\\\"email\\\" placeholder=\\\"Ingresa tu correo\\\" formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Password:</ion-label>\\n      <ion-input type=\\\"password\\\" placeholder=\\\"Ingresa tu contraseña\\\" formControlName=\\\"password\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n        <div class=\\\"error-message\\\" *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n    <ion-button class=\\\"submit-btn\\\" expand=\\\"block\\\" fill=\\\"solid\\\" type=\\\"submit\\\">Iniciar sesión</ion-button>\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n  </form>\\n\\n  <p class=\\\"go-to-login\\\">¿No tienes una cuenta? <ion-button expand=\\\"block\\\" fill=\\\"clear\\\" routerDirection=\\\"forward\\\" (click)=\\\"goRegisterPage()\\\">Registrarme</ion-button></p>\\n\\n  </div>\\n</ion-content>\\n\"","module.exports = \".error-message {\\n  color: var(--ion-color-danger); }\\n\\n.go-to-register {\\n  text-align: center;\\n  margin-top: 20px; }\\n\\n.submit-btn {\\n  margin-top: 40px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXVyaWNpby9pb25pYy9pb25pYy1tZWV0dXBzL0ZyYW1ld29yay9zcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVDLDhCQUE4QixFQUFBOztBQUcvQjtFQUVFLGtCQUFrQjtFQUNsQixnQkFBZ0IsRUFBQTs7QUFHbEI7RUFFRSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5lcnJvci1tZXNzYWdlXG57XG4gY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xufVxuXG4uZ28tdG8tcmVnaXN0ZXJcbntcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xufVxuXG4uc3VibWl0LWJ0blxue1xuICBtYXJnaW4tdG9wOiA0MHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\nimport { AlertController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n\n  validation_messages = {\n   'email': [\n     { type: 'required', message: 'Ingresa tu correo' },\n     { type: 'pattern', message: 'Por favor ingresa un correo valido.' }\n   ],\n   'password': [\n     { type: 'required', message: 'Ingresa tu contraseña.' },\n     { type: 'minlength', message: 'La contraseña debe tener al menos 5 caracteres.' }\n   ]\n };\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public alertController: AlertController\n  ) { }\n\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      header: 'Advertencia',\n      subHeader: 'Facebook Login Error',\n      message: 'Actualmente no esta disponible el servicio.',\n      buttons: ['Lo entiendo']\n    });\n\n    await alert.present();\n  }\n\n  ngOnInit() {\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n    });\n  }\n\n  tryLogin(value){\n    this.authService.doLogin(value)\n    .then(res => {\n      this.router.navigate([\"/home\"]);\n    }, err => {\n      this.errorMessage = \"Correo electronico o contraseña incorrecta\";\n      console.log(err)\n    })\n  }\n\n  goRegisterPage(){\n    this.router.navigate([\"/register\"]);\n  }\n}\n"],"sourceRoot":""}