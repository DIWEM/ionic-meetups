{"version":3,"file":"ngx-barcode-scanner.umd.js.map","sources":["ng://ngx-barcode-scanner/lib/barcode-scanner-livestream/barcode-types.ts","ng://ngx-barcode-scanner/lib/barcode-scanner-livestream/barcode-scanner-livestream.config.ts","ng://ngx-barcode-scanner/lib/barcode-scanner-livestream/barcode-scanner-livestream.component.ts","ng://ngx-barcode-scanner/lib/barcode-scanner-livestream/barcode-scanner-livestream.module.ts","ng://ngx-barcode-scanner/lib/barcode-scanner-livestream-overlay/barcode-scanner-livestream-overlay.component.ts","ng://ngx-barcode-scanner/lib/barcode-scanner-livestream-overlay/barcode-scanner-livestream-overlay.module.ts"],"sourcesContent":["export const BARCODE_TYPES = [\n    'code_128',\n    'code_39',\n    'code_39_vin',\n    'ean',\n    'ean_extended',\n    'ean_8',\n    'upc',\n    'upc_e',\n    'codabar',\n    'i2of5',\n    '2of5',\n    'code_93'\n]\n\nexport function mapToReader(value) {\n    return [ value + \"_reader\" ];\n}\n","export const DEFAULT_CONFIG = {\n    inputStream: {\n        name: 'Live',\n        type: 'LiveStream',\n        target: null,\n        constraints: {\n            width: { min: 640 },\n            height: { min: 480 },\n            aspectRatio: { min: 1, max: 100 },\n            facingMode: 'environment', // or user\n        },\n        singleChannel: false // true: only the red color-channel is read\n    },\n    locator: {\n        patchSize: 'medium',\n        halfSample: true\n    },\n    locate: true,\n    numOfWorkers: 4,\n    decoder: {\n        readers: ['code_128_reader']\n    }\n};","import {\n    Component, Input, Output, EventEmitter, ViewChild, OnDestroy, ViewEncapsulation, OnChanges, SimpleChanges\n} from '@angular/core';\nimport * as Quagga from 'quagga';\nimport { mapToReader } from './barcode-types';\nimport { DEFAULT_CONFIG } from './barcode-scanner-livestream.config';\n\n@Component({\n    selector: 'barcode-scanner-livestream',\n    templateUrl: './barcode-scanner-livestream.component.html',\n    styleUrls: ['./barcode-scanner-livestream.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class BarecodeScannerLivestreamComponent implements OnChanges, OnDestroy {\n    // Inputs\n    @Input() type: string;\n\n    // Outputs\n    @Output() valueChanges = new EventEmitter();\n\n    @ViewChild('BarecodeScanner') barecodeScanner;\n\n    private started = false;\n\n    private configQuagga = DEFAULT_CONFIG;\n\n    ngOnDestroy(): void {\n        this.stop();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.retart();\n    }\n\n    private _init() {\n        return new Promise((resolve, reject) => {\n            Quagga.onProcessed((result) => this.onProcessed(result));\n\n            Quagga.onDetected((result) => this.onDetected(result));\n\n            this.configQuagga.inputStream.target = this.barecodeScanner.nativeElement;\n\n            if (this.type) {\n                this.configQuagga.decoder.readers = mapToReader(this.type);\n            }\n\n            Quagga.init(this.configQuagga, (err) => {\n                if (err) {\n                    console.log(err);\n                    return reject(err);\n                }\n\n                resolve();\n            });\n        });\n    }\n\n    start() {\n        if (!this.started) {\n            return this._init().then(() => {\n                Quagga.start();\n                this.started = true;\n                console.log('started')\n            })\n        }\n\n        return Promise.resolve();\n    }\n\n    stop() {\n        if (this.started) {\n            Quagga.stop();\n            this.started = false;\n            console.log('stopped')\n        }\n    }\n\n    retart() {\n        if (this.started) {\n            this.stop();\n            this.start();\n        }\n    }\n\n    isStarted() {\n        return this.started;\n    }\n\n    onProcessed(result: any): any {\n        let drawingCtx = Quagga.canvas.ctx.overlay,\n            drawingCanvas = Quagga.canvas.dom.overlay;\n\n        if (result) {\n            if (result.boxes) {\n                drawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute('width')), parseInt(drawingCanvas.getAttribute('height')));\n                result.boxes.filter(function (box) {\n                    return box !== result.box;\n                }).forEach(function (box) {\n                    Quagga.ImageDebug.drawPath(box, {\n                        x: 0,\n                        y: 1,\n                    }, drawingCtx, {\n                            color: 'green',\n                            lineWidth: 2,\n                        });\n                });\n            }\n\n            if (result.box) {\n                Quagga.ImageDebug.drawPath(result.box, {\n                    x: 0,\n                    y: 1,\n                }, drawingCtx, {\n                        color: '#00F',\n                        lineWidth: 2,\n                    });\n            }\n\n            if (result.codeResult && result.codeResult.code) {\n                Quagga.ImageDebug.drawPath(result.line, {\n                    x: 'x',\n                    y: 'y',\n                }, drawingCtx, {\n                        color: 'red',\n                        lineWidth: 3,\n                    });\n            }\n\n        }\n    }\n\n    onDetected(result) {\n        this.valueChanges.next(result);\n    }\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BarecodeScannerLivestreamComponent } from './barcode-scanner-livestream.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        BarecodeScannerLivestreamComponent\n    ],\n    exports: [\n        BarecodeScannerLivestreamComponent\n    ]\n})\nexport class BarecodeScannerLivestreamModule { }\n","import {\n    Component, Input, Output, EventEmitter, ViewChild, OnDestroy\n} from '@angular/core';\nimport { BarecodeScannerLivestreamComponent } from '../barcode-scanner-livestream/barcode-scanner-livestream.component';\n\n@Component({\n    selector: 'barcode-scanner-livestream-overlay',\n    templateUrl: './barcode-scanner-livestream-overlay.component.html',\n    styleUrls: ['./barcode-scanner-livestream-overlay.component.scss'],\n})\nexport class BarecodeScannerLivestreamOverlayComponent implements OnDestroy{\n    // Inputs\n    @Input() type: string;\n\n    @Output() valueChanges = new EventEmitter();\n\n    @ViewChild(BarecodeScannerLivestreamComponent)\n    scanner: BarecodeScannerLivestreamComponent;\n\n    private _showScanner = false;\n\n    get showScanner(){\n        return this._showScanner;\n    }\n    \n    ngOnDestroy(){\n        this.scanner.stop();\n    }\n\n    show() {\n        this._showScanner = true;\n        this.scanner.start();\n    }\n\n    hide() {\n        this._showScanner = false;\n        this.scanner.stop();\n    }\n\n\n\n    onValueChanges(result){\n        this.valueChanges.next(result);\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BarecodeScannerLivestreamOverlayComponent } from './barcode-scanner-livestream-overlay.component';\nimport { BarecodeScannerLivestreamModule } from '../barcode-scanner-livestream/barcode-scanner-livestream.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BarecodeScannerLivestreamModule\n    ],\n    declarations: [\n        BarecodeScannerLivestreamOverlayComponent\n    ],\n    exports: [\n        BarecodeScannerLivestreamOverlayComponent\n    ]\n})\nexport class BarecodeScannerLivestreamOverlayModule { }\n\n"],"names":["EventEmitter","Quagga.onProcessed","Quagga.onDetected","Quagga.init","Quagga.start","Quagga.stop","Quagga.canvas","Quagga.ImageDebug","Component","ViewEncapsulation","Input","Output","ViewChild","NgModule","CommonModule"],"mappings":"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"}
